[0.000000] (-) TimerEvent: {}
[0.000338] (-) JobUnselected: {'identifier': 'a_star_planner'}
[0.000380] (-) JobUnselected: {'identifier': 'chicken_core'}
[0.000400] (-) JobUnselected: {'identifier': 'chicken_simulator'}
[0.000417] (-) JobUnselected: {'identifier': 'chicken_utils'}
[0.000433] (-) JobUnselected: {'identifier': 'hesai_ros_driver'}
[0.000448] (-) JobUnselected: {'identifier': 'joy_translate'}
[0.000463] (-) JobUnselected: {'identifier': 'linefit_ground_segmentation'}
[0.000478] (-) JobUnselected: {'identifier': 'linefit_ground_segmentation_ros'}
[0.000493] (-) JobUnselected: {'identifier': 'map_server'}
[0.000508] (-) JobUnselected: {'identifier': 'pure_pursuit_planner'}
[0.000523] (-) JobUnselected: {'identifier': 'sensor_bringup'}
[0.000537] (-) JobUnselected: {'identifier': 'wheelbot_control'}
[0.000552] (-) JobUnselected: {'identifier': 'wheelbot_description'}
[0.000567] (-) JobUnselected: {'identifier': 'ydlidar_ros2_driver'}
[0.000584] (ekf_localization) JobQueued: {'identifier': 'ekf_localization', 'dependencies': OrderedDict()}
[0.000608] (ekf_localization) JobStarted: {'identifier': 'ekf_localization'}
[0.012883] (ekf_localization) JobProgress: {'identifier': 'ekf_localization', 'progress': 'cmake'}
[0.013938] (ekf_localization) JobProgress: {'identifier': 'ekf_localization', 'progress': 'build'}
[0.014282] (ekf_localization) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/suke/chicken_core/build/ekf_localization', '--', '-j12', '-l12'], 'cwd': '/home/suke/chicken_core/build/ekf_localization', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'ja:en'), ('USER', 'suke'), ('LC_TIME', 'ja_JP.UTF-8'), ('CCACHE_DIR', '/var/tmp/ccache'), ('XDG_SESSION_TYPE', 'x11'), ('STM32CubeMX_PATH', '/home/suke/STM32CubeMX'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/suke/ouxt_automation/robotx_ws/install/navi_sim/lib:/home/suke/ouxt_automation/robotx_ws/install/wamv_control/lib:/home/suke/ouxt_automation/robotx_ws/install/vrx_bridge/lib:/home/suke/ouxt_automation/robotx_ws/install/velocity_planner/lib:/home/suke/ouxt_automation/robotx_ws/install/usv_controller/lib:/home/suke/ouxt_automation/robotx_ws/install/robotx_communication/lib:/home/suke/ouxt_automation/robotx_ws/install/tcp_sender/lib:/home/suke/ouxt_automation/robotx_ws/install/playstation_controller_drivers/lib:/home/suke/ouxt_automation/robotx_ws/install/sdl2_vendor2/lib:/home/suke/ouxt_automation/robotx_ws/install/scan_segmentation/lib:/home/suke/ouxt_automation/robotx_ws/install/robotx_msgs/lib:/home/suke/ouxt_automation/robotx_ws/install/robotx_ekf/lib:/home/suke/ouxt_automation/robotx_ws/install/robotx_costmap_calculator/lib:/home/suke/ouxt_automation/robotx_ws/install/robotx_bt_planner/lib:/home/suke/ouxt_automation/robotx_ws/install/robotx_behavior_tree/lib:/home/suke/ouxt_automation/robotx_ws/install/robotx_behavior_msgs/lib:/home/suke/ouxt_automation/robotx_ws/install/pure_pursuit_planner/lib:/home/suke/ouxt_automation/robotx_ws/install/point_painting/lib:/home/suke/ouxt_automation/robotx_ws/install/perception/lib:/home/suke/ouxt_automation/robotx_ws/install/pcl_apps/lib:/home/suke/ouxt_automation/robotx_ws/install/opencv_components/lib:/home/suke/ouxt_automation/robotx_ws/install/perception_msgs/lib:/home/suke/ouxt_automation/robotx_ws/install/pcl_type_adapter/lib:/home/suke/ouxt_automation/robotx_ws/install/pcl_apps_msgs/lib:/home/suke/ouxt_automation/robotx_ws/install/image_processing_utils/lib:/home/suke/ouxt_automation/robotx_ws/install/image_geometry/lib:/home/suke/ouxt_automation/robotx_ws/install/opencv_vendor/lib:/home/suke/ouxt_automation/robotx_ws/install/odom_frame_publisher/lib:/home/suke/ouxt_automation/robotx_ws/install/nmea_to_geopose/lib:/home/suke/ouxt_automation/robotx_ws/install/ndt_omp/lib:/home/suke/ouxt_automation/robotx_ws/install/lidar_camera_fusion/lib:/home/suke/ouxt_automation/robotx_ws/install/lua_vendor/lib:/home/suke/ouxt_automation/robotx_ws/install/local_waypoint_server/lib:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_planner/lib:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_msgs/lib:/home/suke/ouxt_automation/robotx_ws/install/grid_map_type_adapter/lib:/home/suke/ouxt_automation/robotx_ws/install/geometry_msgs_data_buffer/lib:/home/suke/ouxt_automation/robotx_ws/install/geographic_conversion/lib:/home/suke/ouxt_automation/robotx_ws/install/geodesy/lib:/home/suke/ouxt_automation/robotx_ws/install/geographic_msgs/lib:/home/suke/ouxt_automation/robotx_ws/install/detic_onnx_ros2_msg/lib:/home/suke/ouxt_automation/robotx_ws/install/cv_bridge/lib:/home/suke/ouxt_automation/robotx_ws/install/boost_geometry_util/lib:/usr/lib/wsl/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib:/usr/local/cuda-11.8/lib64:'), ('HOME', '/home/suke'), ('OLDPWD', '/home/suke'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ja_JP.UTF-8'), ('SYSTEMD_EXEC_PID', '2590'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('COLCON_PREFIX_PATH', '/home/suke/ouxt_automation/robotx_ws/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'suke'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'suke'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/suke/ouxt_automation/robotx_ws/install/sdl2_vendor2/bin:/opt/ros/humble/bin:/usr/local/cuda-11.8/bin:/home/suke/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/suke-G5-5500:@/tmp/.ICE-unix/2548,unix/suke-G5-5500:/tmp/.ICE-unix/2548'), ('PAPERSIZE', 'a4'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ja_JP.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/e944f442_6cec_471c_b4c4_e3cc2ce18489'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'ja_JP.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ja_JP.UTF-8'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.110'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/suke/ouxt_automation/robotx_ws/install/navi_sim:/home/suke/ouxt_automation/robotx_ws/install/wamv_description:/home/suke/ouxt_automation/robotx_ws/install/wamv_control:/home/suke/ouxt_automation/robotx_ws/install/vrx_bridge:/home/suke/ouxt_automation/robotx_ws/install/vision_opencv:/home/suke/ouxt_automation/robotx_ws/install/robotx_planner_bringup:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_planner_bringup:/home/suke/ouxt_automation/robotx_ws/install/velocity_planner:/home/suke/ouxt_automation/robotx_ws/install/usv_controller:/home/suke/ouxt_automation/robotx_ws/install/robotx_communication:/home/suke/ouxt_automation/robotx_ws/install/tcp_sender:/home/suke/ouxt_automation/robotx_ws/install/playstation_controller_drivers:/home/suke/ouxt_automation/robotx_ws/install/sdl2_vendor2:/home/suke/ouxt_automation/robotx_ws/install/perception_bringup:/home/suke/ouxt_automation/robotx_ws/install/scan_segmentation:/home/suke/ouxt_automation/robotx_ws/install/robotx_msgs:/home/suke/ouxt_automation/robotx_ws/install/robotx_ekf:/home/suke/ouxt_automation/robotx_ws/install/robotx_costmap_calculator:/home/suke/ouxt_automation/robotx_ws/install/robotx_bt_planner:/home/suke/ouxt_automation/robotx_ws/install/robotx_behavior_tree:/home/suke/ouxt_automation/robotx_ws/install/robotx_behavior_msgs:/home/suke/ouxt_automation/robotx_ws/install/pure_pursuit_planner:/home/suke/ouxt_automation/robotx_ws/install/point_painting:/home/suke/ouxt_automation/robotx_ws/install/perception:/home/suke/ouxt_automation/robotx_ws/install/pcl_apps:/home/suke/ouxt_automation/robotx_ws/install/opencv_components:/home/suke/ouxt_automation/robotx_ws/install/perception_msgs:/home/suke/ouxt_automation/robotx_ws/install/pcl_type_adapter:/home/suke/ouxt_automation/robotx_ws/install/pcl_apps_msgs:/home/suke/ouxt_automation/robotx_ws/install/image_processing_utils:/home/suke/ouxt_automation/robotx_ws/install/image_geometry:/home/suke/ouxt_automation/robotx_ws/install/opencv_vendor:/home/suke/ouxt_automation/robotx_ws/install/opencv_tests:/home/suke/ouxt_automation/robotx_ws/install/odom_frame_publisher:/home/suke/ouxt_automation/robotx_ws/install/nmea_to_geopose:/home/suke/ouxt_automation/robotx_ws/install/ndt_omp:/home/suke/ouxt_automation/robotx_ws/install/mock_server:/home/suke/ouxt_automation/robotx_ws/install/lidar_camera_fusion:/home/suke/ouxt_automation/robotx_ws/install/message_synchronizer:/home/suke/ouxt_automation/robotx_ws/install/lua_vendor:/home/suke/ouxt_automation/robotx_ws/install/local_waypoint_server:/home/suke/ouxt_automation/robotx_ws/install/joy_to_twist:/home/suke/ouxt_automation/robotx_ws/install/hungarian_solver:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_planner:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_msgs:/home/suke/ouxt_automation/robotx_ws/install/grid_map_type_adapter:/home/suke/ouxt_automation/robotx_ws/install/geometry_msgs_data_buffer:/home/suke/ouxt_automation/robotx_ws/install/geographic_info:/home/suke/ouxt_automation/robotx_ws/install/geographic_conversion:/home/suke/ouxt_automation/robotx_ws/install/geodesy:/home/suke/ouxt_automation/robotx_ws/install/geographic_msgs:/home/suke/ouxt_automation/robotx_ws/install/detic_onnx_ros2:/home/suke/ouxt_automation/robotx_ws/install/detic_onnx_ros2_msg:/home/suke/ouxt_automation/robotx_ws/install/data_buffer:/home/suke/ouxt_automation/robotx_ws/install/cv_bridge:/home/suke/ouxt_automation/robotx_ws/install/boost_geometry_util:/home/suke/ouxt_automation/robotx_ws/install/behavior_tree_action_builder:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ja_JP.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('CXX', '/usr/lib/ccache/g++'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ja_JP.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ja_JP.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/suke/chicken_core/build/ekf_localization'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/suke/ouxt_automation/robotx_ws/install/robotx_msgs/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/robotx_behavior_msgs/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/perception_msgs/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/pcl_apps_msgs/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/opencv_tests/lib/python3.10/site-packages:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_msgs/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/geodesy/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/geographic_msgs/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/detic_onnx_ros2/lib/python3.10/site-packages:/home/suke/ouxt_automation/robotx_ws/install/detic_onnx_ros2_msg/local/lib/python3.10/dist-packages:/home/suke/ouxt_automation/robotx_ws/install/cv_bridge/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'ja_JP.UTF-8'), ('LC_PAPER', 'ja_JP.UTF-8'), ('CC', '/usr/lib/ccache/gcc'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CUDA_PATH', '/usr/local/cuda-11.8'), ('CMAKE_PREFIX_PATH', '/home/suke/ouxt_automation/robotx_ws/install/navi_sim:/home/suke/ouxt_automation/robotx_ws/install/wamv_description:/home/suke/ouxt_automation/robotx_ws/install/wamv_control:/home/suke/ouxt_automation/robotx_ws/install/vrx_bridge:/home/suke/ouxt_automation/robotx_ws/install/vision_opencv:/home/suke/ouxt_automation/robotx_ws/install/robotx_planner_bringup:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_planner_bringup:/home/suke/ouxt_automation/robotx_ws/install/velocity_planner:/home/suke/ouxt_automation/robotx_ws/install/usv_controller:/home/suke/ouxt_automation/robotx_ws/install/robotx_communication:/home/suke/ouxt_automation/robotx_ws/install/tcp_sender:/home/suke/ouxt_automation/robotx_ws/install/playstation_controller_drivers:/home/suke/ouxt_automation/robotx_ws/install/sdl2_vendor2:/home/suke/ouxt_automation/robotx_ws/install/perception_bringup:/home/suke/ouxt_automation/robotx_ws/install/scan_segmentation:/home/suke/ouxt_automation/robotx_ws/install/robotx_msgs:/home/suke/ouxt_automation/robotx_ws/install/robotx_ekf:/home/suke/ouxt_automation/robotx_ws/install/robotx_costmap_calculator:/home/suke/ouxt_automation/robotx_ws/install/robotx_bt_planner:/home/suke/ouxt_automation/robotx_ws/install/robotx_behavior_tree:/home/suke/ouxt_automation/robotx_ws/install/robotx_behavior_msgs:/home/suke/ouxt_automation/robotx_ws/install/pure_pursuit_planner:/home/suke/ouxt_automation/robotx_ws/install/point_painting:/home/suke/ouxt_automation/robotx_ws/install/perception:/home/suke/ouxt_automation/robotx_ws/install/pcl_apps:/home/suke/ouxt_automation/robotx_ws/install/opencv_components:/home/suke/ouxt_automation/robotx_ws/install/perception_msgs:/home/suke/ouxt_automation/robotx_ws/install/pcl_type_adapter:/home/suke/ouxt_automation/robotx_ws/install/pcl_apps_msgs:/home/suke/ouxt_automation/robotx_ws/install/image_processing_utils:/home/suke/ouxt_automation/robotx_ws/install/image_geometry:/home/suke/ouxt_automation/robotx_ws/install/opencv_vendor:/home/suke/ouxt_automation/robotx_ws/install/odom_frame_publisher:/home/suke/ouxt_automation/robotx_ws/install/nmea_to_geopose:/home/suke/ouxt_automation/robotx_ws/install/ndt_omp:/home/suke/ouxt_automation/robotx_ws/install/mock_server:/home/suke/ouxt_automation/robotx_ws/install/lidar_camera_fusion:/home/suke/ouxt_automation/robotx_ws/install/message_synchronizer:/home/suke/ouxt_automation/robotx_ws/install/lua_vendor:/home/suke/ouxt_automation/robotx_ws/install/local_waypoint_server:/home/suke/ouxt_automation/robotx_ws/install/joy_to_twist:/home/suke/ouxt_automation/robotx_ws/install/hungarian_solver:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_planner:/home/suke/ouxt_automation/robotx_ws/install/hermite_path_msgs:/home/suke/ouxt_automation/robotx_ws/install/grid_map_type_adapter:/home/suke/ouxt_automation/robotx_ws/install/geometry_msgs_data_buffer:/home/suke/ouxt_automation/robotx_ws/install/geographic_info:/home/suke/ouxt_automation/robotx_ws/install/geographic_conversion:/home/suke/ouxt_automation/robotx_ws/install/geodesy:/home/suke/ouxt_automation/robotx_ws/install/geographic_msgs:/home/suke/ouxt_automation/robotx_ws/install/detic_onnx_ros2_msg:/home/suke/ouxt_automation/robotx_ws/install/data_buffer:/home/suke/ouxt_automation/robotx_ws/install/cv_bridge:/home/suke/ouxt_automation/robotx_ws/install/boost_geometry_util:/home/suke/ouxt_automation/robotx_ws/install/behavior_tree_action_builder:/home/suke/ouxt_automation/robotx_ws/install/opencv_tests:/home/suke/ouxt_automation/robotx_ws/install/detic_onnx_ros2:/opt/ros/humble')]), 'shell': False}
[0.070408] (ekf_localization) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target ekf_localization_component\x1b[0m\n'}
[0.091433] (ekf_localization) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/ekf_localization_component.dir/src/ekf_localization_component.cpp.o\x1b[0m\n'}
[0.099510] (-) TimerEvent: {}
[0.199740] (-) TimerEvent: {}
[0.300036] (-) TimerEvent: {}
[0.400332] (-) TimerEvent: {}
[0.500638] (-) TimerEvent: {}
[0.600946] (-) TimerEvent: {}
[0.701252] (-) TimerEvent: {}
[0.801565] (-) TimerEvent: {}
[0.901803] (-) TimerEvent: {}
[1.002036] (-) TimerEvent: {}
[1.102273] (-) TimerEvent: {}
[1.202545] (-) TimerEvent: {}
[1.302830] (-) TimerEvent: {}
[1.403105] (-) TimerEvent: {}
[1.503383] (-) TimerEvent: {}
[1.603658] (-) TimerEvent: {}
[1.703899] (-) TimerEvent: {}
[1.804134] (-) TimerEvent: {}
[1.904373] (-) TimerEvent: {}
[2.004647] (-) TimerEvent: {}
[2.104929] (-) TimerEvent: {}
[2.205211] (-) TimerEvent: {}
[2.305496] (-) TimerEvent: {}
[2.405766] (-) TimerEvent: {}
[2.506015] (-) TimerEvent: {}
[2.606289] (-) TimerEvent: {}
[2.706555] (-) TimerEvent: {}
[2.806818] (-) TimerEvent: {}
[2.907077] (-) TimerEvent: {}
[3.007374] (-) TimerEvent: {}
[3.107671] (-) TimerEvent: {}
[3.207928] (-) TimerEvent: {}
[3.308303] (-) TimerEvent: {}
[3.408612] (-) TimerEvent: {}
[3.508908] (-) TimerEvent: {}
[3.609185] (-) TimerEvent: {}
[3.709483] (-) TimerEvent: {}
[3.809790] (-) TimerEvent: {}
[3.910079] (-) TimerEvent: {}
[4.010347] (-) TimerEvent: {}
[4.110627] (-) TimerEvent: {}
[4.210910] (-) TimerEvent: {}
[4.311212] (-) TimerEvent: {}
[4.411471] (-) TimerEvent: {}
[4.511768] (-) TimerEvent: {}
[4.612007] (-) TimerEvent: {}
[4.712274] (-) TimerEvent: {}
[4.812531] (-) TimerEvent: {}
[4.912816] (-) TimerEvent: {}
[5.013087] (-) TimerEvent: {}
[5.113320] (-) TimerEvent: {}
[5.213585] (-) TimerEvent: {}
[5.313860] (-) TimerEvent: {}
[5.414126] (-) TimerEvent: {}
[5.514390] (-) TimerEvent: {}
[5.614654] (-) TimerEvent: {}
[5.714923] (-) TimerEvent: {}
[5.815192] (-) TimerEvent: {}
[5.915454] (-) TimerEvent: {}
[6.015728] (-) TimerEvent: {}
[6.116009] (-) TimerEvent: {}
[6.216271] (-) TimerEvent: {}
[6.316536] (-) TimerEvent: {}
[6.416787] (-) TimerEvent: {}
[6.517060] (-) TimerEvent: {}
[6.617352] (-) TimerEvent: {}
[6.717650] (-) TimerEvent: {}
[6.817936] (-) TimerEvent: {}
[6.918264] (-) TimerEvent: {}
[7.018560] (-) TimerEvent: {}
[7.118828] (-) TimerEvent: {}
[7.219132] (-) TimerEvent: {}
[7.319438] (-) TimerEvent: {}
[7.419744] (-) TimerEvent: {}
[7.520037] (-) TimerEvent: {}
[7.620347] (-) TimerEvent: {}
[7.720658] (-) TimerEvent: {}
[7.820926] (-) TimerEvent: {}
[7.921220] (-) TimerEvent: {}
[7.937358] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:72:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno declaration matches \xe2\x80\x98\x1b[01m\x1b[Kvoid ekf_localization::ExtendedKalmanFilter::odom_callback(nav_msgs::msg::Odometry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.937686] (ekf_localization) StderrLine: {'line': b'   72 | void \x1b[01;31m\x1b[KExtendedKalmanFilter\x1b[m\x1b[K::odom_callback(nav_msgs::msg::Odometry & msg)\n'}
[7.937921] (ekf_localization) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.938156] (ekf_localization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:8\x1b[m\x1b[K:\n'}
[7.938311] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/include/ekf_localization/ekf_localization_component.hpp:32:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate is: \xe2\x80\x98\x1b[01m\x1b[Kvoid ekf_localization::ExtendedKalmanFilter::odom_callback(const Odometry&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.938412] (ekf_localization) StderrLine: {'line': b'   32 |   void \x1b[01;36m\x1b[Kodom_callback\x1b[m\x1b[K(const nav_msgs::msg::Odometry & msg);\n'}
[7.938507] (ekf_localization) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.938599] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/include/ekf_localization/ekf_localization_component.hpp:11:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass ekf_localization::ExtendedKalmanFilter\x1b[m\x1b[K\xe2\x80\x99 defined here\n'}
[7.938706] (ekf_localization) StderrLine: {'line': b'   11 | class \x1b[01;36m\x1b[KExtendedKalmanFilter\x1b[m\x1b[K : public rclcpp::Node\n'}
[7.938800] (ekf_localization) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.938894] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ekf_localization::ExtendedKalmanFilter::imu_callback(const Imu&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.938990] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:113:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbinding reference of type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu_<std::allocator<void> >&\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst Imu\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst sensor_msgs::msg::Imu_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} discards qualifiers\n'}
[7.939088] (ekf_localization) StderrLine: {'line': b'  113 |     measurementUpdate(\x1b[01;31m\x1b[Kmsg\x1b[m\x1b[K);\n'}
[7.939180] (ekf_localization) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[7.939270] (ekf_localization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:8\x1b[m\x1b[K:\n'}
[7.939389] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/include/ekf_localization/ekf_localization_component.hpp:36:50:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid ekf_localization::ExtendedKalmanFilter::measurementUpdate(sensor_msgs::msg::Imu&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.939503] (ekf_localization) StderrLine: {'line': b'   36 |   void measurementUpdate(\x1b[01;36m\x1b[Ksensor_msgs::msg::Imu & msg\x1b[m\x1b[K);\n'}
[7.939597] (ekf_localization) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.939720] (ekf_localization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[7.939814] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[7.939907] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.939998] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.940099] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.940191] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.940280] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.940371] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.940475] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.940567] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.940666] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:5\x1b[m\x1b[K:\n'}
[7.940791] (ekf_localization) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.940998] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.941106] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.941366] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.941729] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.942281] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:42:68:\x1b[m\x1b[K   required from here\n'}
[7.942667] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(nav_msgs::msg::Odometry_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[7.942801] (ekf_localization) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[7.942894] (ekf_localization) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.942983] (ekf_localization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[7.943071] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[7.943160] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.943255] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.943342] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.943436] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.943524] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.943622] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.943720] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.943810] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.943898] (ekf_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:5\x1b[m\x1b[K:\n'}
[7.943985] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.944110] (ekf_localization) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[7.944200] (ekf_localization) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.944288] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.944376] (ekf_localization) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(nav_msgs::msg::Odometry_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.944508] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(nav_msgs::msg::Odometry_<std::allocator<void> >&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.944736] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.944836] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.944937] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.945041] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.945153] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.945250] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:42:68:\x1b[m\x1b[K   required from here\n'}
[7.945339] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.945428] (ekf_localization) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[7.945515] (ekf_localization) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.945606] (ekf_localization) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.945706] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.945818] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.945929] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.946025] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.946121] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/suke/chicken_core/src/localization/ekf_localization/src/ekf_localization_component.cpp:42:68:\x1b[m\x1b[K   required from here\n'}
[7.946221] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.946337] (ekf_localization) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[7.946425] (ekf_localization) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.946514] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(nav_msgs::msg::Odometry_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.946640] (ekf_localization) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[7.946742] (ekf_localization) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.946832] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.946944] (ekf_localization) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[7.947037] (ekf_localization) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.947124] (ekf_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, ekf_localization::ExtendedKalmanFilter::ExtendedKalmanFilter(const rclcpp::NodeOptions&)::<lambda(nav_msgs::msg::Odometry&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(nav_msgs::msg::Odometry_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.947246] (ekf_localization) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[7.947335] (ekf_localization) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.947422] (ekf_localization) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/ekf_localization_component.dir/build.make:76: CMakeFiles/ekf_localization_component.dir/src/ekf_localization_component.cpp.o] Error 1\n'}
[7.947511] (ekf_localization) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/ekf_localization_component.dir/all] Error 2\n'}
[7.947598] (ekf_localization) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[7.947700] (ekf_localization) CommandEnded: {'returncode': 2}
[7.986527] (ekf_localization) JobEnded: {'identifier': 'ekf_localization', 'rc': 2}
[8.000439] (-) EventReactorShutdown: {}
